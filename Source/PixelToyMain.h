// PixelToy.h

int PixelToy_Main(void);
void UpdateAnimationTimer(void);
OSStatus StopAnimationTimer(void);
void LetTimersBreathe();
pascal void TimerEventHandler(EventLoopTimerRef /*theTimer*/, void *userData);
void AnimateWindow(void);
void HandleMouseDown(void);
void MaintainCursor(void);
void ResetCursor(void);
void SetResizeBoxRect(void);
void HandleKeyDown(char theChar, EventModifiers modifiers);
void HandleMenuChoice(long menuChoice);
void HandleAppleChoice(short theItem);
void HandleFileChoice(short theItem);
void HandleOptionsChoice(short theItem);
void HandleActionsChoice(short theItem);
void HandleFiltersChoice(short theItem);
void HandleColorsChoice(short theItem);
void HandleSetsChoice(short theItem);
OSErr GetManualHTMLFSSpec(FSSpec *manual);
OSStatus DoFinderOpenFSSpec(FSSpec *fss);
void DoFullScreenTransition(void);
void SetCopyMode(void);
void SnapAlignWindow(void);
void MakeWindow(Boolean forceOnScreen);
void SetUpDragRect(void);
//Boolean SetUpUpdate(void);
void UpdateToMain(Boolean toBlur);
void ShowNeedsSoundInputMessage(void);
void UpdateToPNG(void);
void MenuBarInit(void);
short RandNum(short low, short high);
short RandVariance(short plusminus);
short PixelSize(short inSize);
void DoBlur(void);
void DoBalls(void);
void DoLines(void);
void DoDoodle(void);
void DoSwarm(void);
void DoDrops(void);
void DoubleBlit(void);
void DoubleEmbossBlit(void);
void HighQualityBlit(void);
void HighQualityBlitOptimized(void);
void HighQualityEmbossBlit(void);
void CreateWorlds(void);
long MemoryRequiredCurrent(void);
long MemoryRequiredWithValues(short winWidth,
							  short winHeight,
							  Boolean lowQualityMode,
							  Boolean highQuality);
Boolean CanAdjustWorlds(long numberOfBytesChange);
Boolean SetUpWorlds(void);
Boolean LockAllWorlds(void);
void UnlockAllWorlds(void);
void KillGWorlds(void);
void SetForeAndBackColors(void);
void ClearFromAndBase(void);
void StartQTExport(void);
void FrameQTExport(void);
void StopQTExport(void);
void ShowSettings(void);
void PostEmboss(void);
void MyOpenFile(FSSpec fss);
void GetAndDrawImage(void);
Boolean DrawCurrentImage(Boolean resize);
void AddFPSToWindowTitle(long frameID);
short Absolute(short num);
void StopError(short desc, OSErr type);
void NoteError(short desc, OSErr type);
void ErrorToString(OSErr err, Str255 str);
void MemoryDisplayUpdate(Boolean force);
Boolean PTLockPixels(PixMapHandle pm);
void SaveContext(void);
void RestoreContext(void);
void StopQuickDrawUpdates(void);
void ResumeQuickDrawUpdates(void);
